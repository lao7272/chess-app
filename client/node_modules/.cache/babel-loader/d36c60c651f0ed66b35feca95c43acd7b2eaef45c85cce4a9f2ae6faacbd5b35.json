{"ast":null,"code":"import Piece from \"../Piece\";\nimport Position from \"../Positition\";\nimport Movement from \"./Movement\";\nconst movement = new Movement();\nexport default class Knight extends Piece {\n  constructor(position, team) {\n    let possibleMoves = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    super(position, team, \"knight\", possibleMoves);\n  }\n  getPossibleMoves(pieces) {\n    for (let i = -1; i < 2; i += 2) {\n      for (let j = -1; j < 2; j += 2) {\n        const verticalMove = new Position(this.position.x + j, this.position.y + i * 2);\n        const horizontalMove = new Position(this.position.x + i * 2, this.position.y + j);\n        if (verticalMove.x <= 7 && verticalMove.y >= 0 && verticalMove.x >= 0 && verticalMove.y <= 7) {\n          if (movement.tileIsEmptyOrCaptured(verticalMove, pieces, this.team)) {\n            this.possibleMoves.push(verticalMove);\n          }\n        }\n        if (horizontalMove.x <= 7 && horizontalMove.y >= 0 && horizontalMove.x >= 0 && horizontalMove.y <= 7) {\n          if (movement.tileIsEmptyOrCaptured(horizontalMove, pieces, this.team)) {\n            this.possibleMoves.push(horizontalMove);\n          }\n        }\n      }\n    }\n    return this.possibleMoves;\n  }\n  clone() {\n    return new Knight(this.position.clone(), this.team, this.possibleMoves.map(move => move.clone()));\n  }\n}","map":{"version":3,"names":["Piece","Position","Movement","movement","Knight","constructor","position","team","possibleMoves","arguments","length","undefined","getPossibleMoves","pieces","i","j","verticalMove","x","y","horizontalMove","tileIsEmptyOrCaptured","push","clone","map","move"],"sources":["/Users/lao/Desktop/chess-app/src/models/pieces/Knight.js"],"sourcesContent":["import Piece from \"../Piece\";\nimport Position from \"../Positition\";\nimport Movement from \"./Movement\";\nconst movement = new Movement();\nexport default class Knight extends Piece {\n    constructor (position, team, possibleMoves = []) {\n        super(position, team, \"knight\", possibleMoves);\n    }\n\n    getPossibleMoves (pieces) {\n        for (let i = -1; i < 2; i += 2) {\n            for (let j = -1; j < 2; j += 2) {\n                const verticalMove = new Position(this.position.x + j, this.position.y + i * 2);\n                const horizontalMove = new Position(this.position.x + i * 2, this.position.y + j);\n                if(verticalMove.x <= 7 && verticalMove.y >= 0 && verticalMove.x >= 0 && verticalMove.y <= 7) {\n                    if (movement.tileIsEmptyOrCaptured(verticalMove, pieces, this.team)) {\n                        this.possibleMoves.push(verticalMove);\n                    }\n                } \n                if(horizontalMove.x <= 7 && horizontalMove.y >= 0 && horizontalMove.x >= 0 && horizontalMove.y <= 7) {\n                    if (movement.tileIsEmptyOrCaptured(horizontalMove, pieces, this.team)) {\n                        this.possibleMoves.push(horizontalMove);\n                    }\n                }\n                \n            }\n        }\n        return this.possibleMoves;\n    }\n    clone(){\n        return new Knight(this.position.clone(), this.team, this.possibleMoves.map(move => move.clone()));\n    }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,UAAU;AAC5B,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAOC,QAAQ,MAAM,YAAY;AACjC,MAAMC,QAAQ,GAAG,IAAID,QAAQ,EAAE;AAC/B,eAAe,MAAME,MAAM,SAASJ,KAAK,CAAC;EACtCK,WAAWA,CAAEC,QAAQ,EAAEC,IAAI,EAAsB;IAAA,IAApBC,aAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAC3C,KAAK,CAACH,QAAQ,EAAEC,IAAI,EAAE,QAAQ,EAAEC,aAAa,CAAC;EAClD;EAEAI,gBAAgBA,CAAEC,MAAM,EAAE;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAE;MAC5B,KAAK,IAAIC,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAE;QAC5B,MAAMC,YAAY,GAAG,IAAIf,QAAQ,CAAC,IAAI,CAACK,QAAQ,CAACW,CAAC,GAAGF,CAAC,EAAE,IAAI,CAACT,QAAQ,CAACY,CAAC,GAAGJ,CAAC,GAAG,CAAC,CAAC;QAC/E,MAAMK,cAAc,GAAG,IAAIlB,QAAQ,CAAC,IAAI,CAACK,QAAQ,CAACW,CAAC,GAAGH,CAAC,GAAG,CAAC,EAAE,IAAI,CAACR,QAAQ,CAACY,CAAC,GAAGH,CAAC,CAAC;QACjF,IAAGC,YAAY,CAACC,CAAC,IAAI,CAAC,IAAID,YAAY,CAACE,CAAC,IAAI,CAAC,IAAIF,YAAY,CAACC,CAAC,IAAI,CAAC,IAAID,YAAY,CAACE,CAAC,IAAI,CAAC,EAAE;UACzF,IAAIf,QAAQ,CAACiB,qBAAqB,CAACJ,YAAY,EAAEH,MAAM,EAAE,IAAI,CAACN,IAAI,CAAC,EAAE;YACjE,IAAI,CAACC,aAAa,CAACa,IAAI,CAACL,YAAY,CAAC;UACzC;QACJ;QACA,IAAGG,cAAc,CAACF,CAAC,IAAI,CAAC,IAAIE,cAAc,CAACD,CAAC,IAAI,CAAC,IAAIC,cAAc,CAACF,CAAC,IAAI,CAAC,IAAIE,cAAc,CAACD,CAAC,IAAI,CAAC,EAAE;UACjG,IAAIf,QAAQ,CAACiB,qBAAqB,CAACD,cAAc,EAAEN,MAAM,EAAE,IAAI,CAACN,IAAI,CAAC,EAAE;YACnE,IAAI,CAACC,aAAa,CAACa,IAAI,CAACF,cAAc,CAAC;UAC3C;QACJ;MAEJ;IACJ;IACA,OAAO,IAAI,CAACX,aAAa;EAC7B;EACAc,KAAKA,CAAA,EAAE;IACH,OAAO,IAAIlB,MAAM,CAAC,IAAI,CAACE,QAAQ,CAACgB,KAAK,EAAE,EAAE,IAAI,CAACf,IAAI,EAAE,IAAI,CAACC,aAAa,CAACe,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACF,KAAK,EAAE,CAAC,CAAC;EACrG;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}