{"ast":null,"code":"import Piece from \"../Piece\";\nimport Position from \"../Positition\";\nimport Movement from \"./Movement\";\nconst movement = new Movement();\nexport default class Pawn extends Piece {\n  constructor(position, team, enPassant) {\n    let possibleMoves = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    super(position, team, \"pawn\", possibleMoves);\n    this.enPassant = enPassant;\n  }\n  getPossibleMoves(pieces) {\n    const pawnDirection = this.team === 'white' ? 1 : -1;\n    const specialRow = this.team === 'white' ? 1 : 6;\n    const normalMove = new Position(this.position.x, this.position.y + pawnDirection);\n    const specialMove = new Position(this.position.x, this.position.y + pawnDirection * 2);\n    const rightCaptureMove = new Position(this.position.x + 1, this.position.y + pawnDirection);\n    const leftCaptureMove = new Position(this.position.x - 1, this.position.y + pawnDirection);\n    const leftPosition = new Position(this.position.x - 1, this.position.y);\n    const rightPosition = new Position(this.position.x + 1, this.position.y);\n    if (!movement.tileIsOccupied(normalMove, pieces)) this.possibleMoves.push(normalMove);\n    if (this.position.y === specialRow && !movement.tileIsOccupied(specialMove, pieces)) {\n      this.possibleMoves.push(specialMove);\n    }\n    // CAPTURE\n    if (movement.pieceIsCaptured(rightCaptureMove, pieces, this.team)) {\n      this.possibleMoves.push(rightCaptureMove);\n    } // EN PASSANT\n    else if (!movement.tileIsOccupied(rightCaptureMove, pieces)) {\n      const rightPiece = pieces.find(p => p.samePosition(rightPosition));\n      if (rightPiece && rightPiece.enPassant) {\n        this.possibleMoves.push(rightCaptureMove);\n      }\n    }\n    // CAPTURE\n    if (movement.pieceIsCaptured(leftCaptureMove, pieces, this.team)) {\n      this.possibleMoves.push(leftCaptureMove);\n    } // EN PASSANT\n    else if (!movement.tileIsOccupied(leftCaptureMove, pieces)) {\n      const leftPiece = pieces.find(p => p.samePosition(leftPosition));\n      if (leftPiece && leftPiece.enPassant) {\n        this.possibleMoves.push(leftCaptureMove);\n      }\n    }\n    return this.possibleMoves;\n  }\n  isEnPassant(desiredPosition, pieces) {\n    const pawnDirection = this.team === 'white' ? 1 : -1;\n    if ((desiredPosition.x - this.position.x === -1 || desiredPosition.x - this.position.x === 1) && desiredPosition.y - this.position.y === pawnDirection) {\n      const piece = pieces.find(p => p.samePosition({\n        x: desiredPosition.x,\n        y: desiredPosition.y - pawnDirection\n      }) && p.isPawn && p.enPassant);\n      if (piece) return true;\n    }\n    return false;\n  }\n  clone() {\n    return new Pawn(this.position.clone(), this.team, this.enPassant, this.possibleMoves.map(move => move.clone()));\n  }\n}","map":{"version":3,"names":["Piece","Position","Movement","movement","Pawn","constructor","position","team","enPassant","possibleMoves","arguments","length","undefined","getPossibleMoves","pieces","pawnDirection","specialRow","normalMove","x","y","specialMove","rightCaptureMove","leftCaptureMove","leftPosition","rightPosition","tileIsOccupied","push","pieceIsCaptured","rightPiece","find","p","samePosition","leftPiece","isEnPassant","desiredPosition","piece","isPawn","clone","map","move"],"sources":["/Users/lao/Desktop/chess-app/src/models/pieces/Pawn.js"],"sourcesContent":["import Piece from \"../Piece\";\nimport Position from \"../Positition\";\nimport Movement from \"./Movement\";\nconst movement = new Movement();\nexport default class Pawn extends Piece {\n    constructor (position, team, enPassant, possibleMoves = []) {\n        super(position, team, \"pawn\", possibleMoves);\n        this.enPassant = enPassant;\n    }\n    getPossibleMoves (pieces) {\n        const pawnDirection = this.team === 'white' ? 1 : -1;\n        const specialRow = this.team === 'white' ? 1 : 6;\n        const normalMove = new Position(this.position.x, this.position.y + pawnDirection );\n        const specialMove = new Position(this.position.x, this.position.y + pawnDirection * 2 );\n        const rightCaptureMove = new Position(this.position.x + 1, this.position.y + pawnDirection);\n        const leftCaptureMove = new Position(this.position.x - 1, this.position.y + pawnDirection );\n        const leftPosition = new Position(this.position.x - 1, this.position.y);\n        const rightPosition = new Position(this.position.x + 1, this.position.y);\n    \n        if(!movement.tileIsOccupied(normalMove, pieces)) this.possibleMoves.push(normalMove);\n        \n        if(this.position.y === specialRow && !movement.tileIsOccupied(specialMove, pieces)){\n            this.possibleMoves.push(specialMove); \n        } \n        // CAPTURE\n        if (movement.pieceIsCaptured(rightCaptureMove, pieces, this.team)) {\n            this.possibleMoves.push(rightCaptureMove); \n        } // EN PASSANT\n        else if (!movement.tileIsOccupied(rightCaptureMove, pieces)) {\n            const rightPiece = pieces.find(p => p.samePosition(rightPosition));\n            if(rightPiece && rightPiece.enPassant) {\n                this.possibleMoves.push(rightCaptureMove);\n            }\n        }\n        // CAPTURE\n        if (movement.pieceIsCaptured(leftCaptureMove, pieces, this.team)) {\n            this.possibleMoves.push(leftCaptureMove);\n        } // EN PASSANT\n        else if (!movement.tileIsOccupied(leftCaptureMove, pieces)) {\n            const leftPiece = pieces.find(p => p.samePosition(leftPosition));\n            if(leftPiece && leftPiece.enPassant) {\n                this.possibleMoves.push(leftCaptureMove);\n            }\n        }\n        return this.possibleMoves;\n    }\n    isEnPassant (desiredPosition, pieces){\n        const pawnDirection = this.team === 'white' ? 1 : -1;\n        if ((desiredPosition.x - this.position.x === -1 || desiredPosition.x - this.position.x === 1) && desiredPosition.y - this.position.y === pawnDirection) {\n            const piece = pieces.find(p => p.samePosition({\n                x: desiredPosition.x,\n                y: desiredPosition.y - pawnDirection\n            }) && p.isPawn && p.enPassant);\n            if (piece) return true;\n        }\n        return false;\n    }\n    clone(){\n        return new Pawn(this.position.clone(), this.team, this.enPassant, this.possibleMoves.map(move => move.clone()));\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}